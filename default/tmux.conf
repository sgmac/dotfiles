set -g set-titles 
set-option -g set-titles-string "tmux:#I [ #W ]"
# In order to use scripts these have to be in a folder in the PATH variable.
# Binding like screen

unbind C-b
set -g prefix C-a
bind C-a send-prefix

# Copy into the X clipboard
bind-key C-C run 'tmux show-buffer|xsel -pbi'

# Custom command bindings
bind 'e' new-window "exec vi ~/.tmux.conf"
bind C-n next-window
bind C-p previous-window

# Default options
bind r source-file  ~/.tmux.conf
set -g history-limit 5000
#setw -g mode-keys vi
setw -g mode-mouse off
set -g visual-bell on
set -g base-index 1
setw -g pane-base-index 1

set -g message-bg black
set -g message-fg green
set -g message-attr bright

# Status colors
set -g status-bg black
set -g status-fg white
set -g status-attr bright

set -g status-interval 30
set -g status-left-length 50 

# Status bar position and what to show (scripts)
set -g status-justify centre
set -g status-left '#[fg=black]Â» #[fg=green,bold]#T# #[fg=white]'
set -g status-right '#[bg=black]#[fg=green,bold] [%m/%d %H:%M]'


# Active window title colors (default: white, default, bright (= bold))
set-window-option -g window-status-current-fg white
set-window-option -g window-status-current-bg blue
set-window-option -g window-status-current-attr bright


# panes:
set-option -g pane-border-fg white
set-option -g pane-border-bg default
set-option -g pane-active-border-fg red
set-option -g pane-active-border-bg default



setw -g mode-bg red
setw -g mode-attr bright
setw -g mode-fg white
setw -g monitor-activity on
set -g visual-activity on

setw -g window-status-current-fg green
setw -g window-status-current-attr bright
setw -g window-status-current-bg black

# Resizing pane

bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5


# Disabled
# setw -g window-status-fg red
# setw -g window-status-bg black
# bind C-v split-window -h
# bind C-s split-window -v

# bind v split-window -h
# bind s split-window -v
# unbind '"'
# unbind %
set-option -g allow-rename off

# Vim-tmux navigator plugin
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
#bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
