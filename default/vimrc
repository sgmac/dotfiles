" --- Common
syntax enable
filetype plugin indent on


set nocompatible
set background=dark
set encoding=utf8
set showcmd
set showmode
set backspace=indent,eol,start
set backupdir=~/.vimswp
set directory=~/.vimswp

set wildmode=list:longest
set history=1000
set undolevels=1000
set scrolloff=3
set hlsearch
set incsearch
set hidden
set wildmenu
set ignorecase
set smartcase
set title

" When doing search and replace, add g flag by default"
set gdefault

runtime macros/matchit.vim

" --- Key mapping
imap jk <ESC>
map 9 :bp<CR>
nnoremap <space> za
vnoremap <space> zf
nnoremap <f12> :e $MYVIMRC<CR>
map      <f2> :NERDTreeToggle <CR>

" --- Plugins
call pathogen#infect()
autocmd vimenter * if !argc() | NERDTree | endif
autocmd BufNewFile,BufRead *.yaml,*.yml silent

" --- Save file using update, only if there are changes, conflics 
" --- if you want to send Vim to background.

"noremap <C-Z> :update<CR>
vnoremap <C-Z> :update<CR>
inoremap <C-Z> :update<CR>

" --- Closing faster
let mapleader=","
noremap <Leader>e :quit<CR>
noremap <Leader>E :qa!<CR>


" --- Tab navigating
map <Leader>n 	<esc>:tabprevious<CR>
map <Leader>m 	<esc>:tabnext<CR>
map <Leader>q	<esc>:tabclose<CR>
map <Leader>c	<esc>:tabnew<CR>


" --- Moving code blocks
vnoremap < <gv 
vnoremap > >gv 

" --- Sort in vistual mode
map <Leader>s :sort<CR>

" --- Visual split of line according column=80
vmap Q 	gq
vmap Q  gqap 


" --- Autoreload vimrc 
autocmd! bufwritepost .vimrc source %


" --- Disabling keys
nnoremap <up>   <nop>
nnoremap <down> <nop>
nnoremap <left> <nop>
nnoremap <right> <nop>
nnoremap <C-e> 3<C-e>
nnoremap <C-y> 3<C-y>

" Normal mode
nnoremap <C-j> :m .+1<CR>==
nnoremap <C-k> :m .-2<CR>==
nnoremap <f5> :!ctags -R<CR>
nnoremap <F3> :TlistOpen<CR>


" Visual mode
vnoremap <C-j> :m '>+1<CR>gv=gv
vnoremap <C-k> :m '<-2<CR>gv=gv

""----- Pymode -----""

let g:pymode_rope = 1

" Disable check	on every save
let g:pymode_lint_write = 1
let g:pymode_run_key = 'R'


" Documentation
let g:pymode_doc = 1
let g:pymode_doc_key = 'K'

"Linting
" Auto jump on first error
let g:pymode_lint_jump = 1
let g:pymode_lint = 1
let g:pymode_lint_checker = "pyflakes,pep8"

" Support virtualenv
let g:pymode_virtualenv = 1

" Syntax highlighting
let g:pymode_syntax = 1
let g:pymode_syntax_all = 1
let g:pymode_syntax_indent_errors = g:pymode_syntax_all
let g:pymode_syntax_space_errors = g:pymode_syntax_all
autocmd FileType python setlocal number tabstop=4 expandtab shiftwidth=4 softtabstop=4


" -- CtrlP plugin
set runtimepath^=~/.vim/bundle/ctrlp.vim
let g:ctrlp_max_height = 30
set wildignore+=*.pyc
set runtimepath+=$HOME/.vim/plugin
set tags=./tags;~/Projects


" YAML auto indent
autocmd Filetype *.yaml,*.yml set fdm=indent


" --- Better folding
set nofoldenable

" --- Gvim
if has("gui_running")
   colorschem badwolf
   set guioptions-=m 
   set guioptions-=T
   set guioptions-=r

   
   if has("gui_gtk2")
		   set guifont=Lucida\ Console\ 11
   elseif has("x11")
	   " Also for GTK 1
	   set guifont=*-lucidatypewriter-medium-r-normal-*-*-180-*-*-m-*-*
   elseif has("gui_win32")
	   set guifont=Luxi_Mono:h12:cANSI
   endif

endif
